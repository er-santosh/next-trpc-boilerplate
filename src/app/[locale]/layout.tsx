import type { Metadata } from 'next';
import { NextIntlClientProvider } from 'next-intl';
import { getLocale, setRequestLocale } from 'next-intl/server';
import { notFound } from 'next/navigation';

import { allLocaleCodes, availableLocalesMap, defaultLocale } from '@/i18n/locales';

import { INTER, OPEN_SANS } from '@/lib/next-fonts';
import { cn } from '@/lib/utils';
import '@/styles/globals.css';

const fontClasses = cn(OPEN_SANS.variable, INTER.variable);

export const metadata: Metadata = {
  title: 'Next tRpc boilerplate',
  description: 'Generated by next tRpc boilerplate',
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const locale = await getLocale();

  if (!allLocaleCodes.includes(locale)) {
    // Forces the current locale to be the Default Locale
    setRequestLocale(defaultLocale.code);

    // when the locale is not listed in the locales, return NotFound
    return notFound();
  }

  const { langDir, hrefLang } = availableLocalesMap[locale] || defaultLocale;

  // Configures the current Locale to be the given Locale of the Request
  setRequestLocale(locale);

  return (
    <html lang={hrefLang} dir={langDir} suppressHydrationWarning>
      <body className={fontClasses}>
        <NextIntlClientProvider>{children}</NextIntlClientProvider>
      </body>
    </html>
  );
}
